spring.application.name=back-end
# Disable JPA Event Publication and Enable MongoDB Event Publication
spring.modulith.events.mongodb.transaction-management.enabled=false
spring.data.mongodb.uri=mongodb://${MONGO_INITDB_ROOT_USERNAME:root}:${MONGO_INITDB_ROOT_PASSWORD:0000}@localhost:27017/defensym?authSource=admin

# MongoDB Configuration
spring.data.mongodb.auto-index-creation=true

# Elasticsearch Configuration
spring.elasticsearch.uris=http://localhost:9200
spring.elasticsearch.username=${ELASTICSEARCH_USERNAME:elastic}
# Add these for better connection handling
spring.elasticsearch.connection-timeout=5s
spring.elasticsearch.socket-timeout=3s
server.port=9090
# Elasticseach Auto-Index Creation
spring.elasticsearch.indices.audit-logs=audit_logs
# Keycloak Configuration (for Authentication)
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/Defensy
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/Defensy/protocol/openid-connect/certs

# Keycloak Admin Client Configuration (for managing users programmatically)
keycloak.auth-server-url=http://localhost:8080
keycloak.realm=Defensy
keycloak.resource=defensy-backend
keycloak.public-client=true
keycloak.credentials.secret=${KEYCLOAK_CLIENT_SECRET}
POSTGRES_USER=keycloak
POSTGRES_PASSWORD=password

spring.docker.compose.enabled=true
spring.data.elasticsearch.repositories.enabled=true

# Enable full logging
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.org.hibernate.SQL=DEBUG
spring.main.banner-mode=console
csv.ingestion.directory=${user.dir}/csv-inbox

wazuh.api.base-url=${WAZUH_API_BASE_URL}
wazuh.api.username=${WAZUH_API_USERNAME}
wazuh.api.password=${WAZUH_API_PASSWORD}
wazuh.polling.interval=${WAZUH_POLLING_INTERVAL:PT5S}
wazuh.ssl.trust-store=classpath:wazuh-truststore.jks
wazuh.ssl.trust-store-password=changeit
wazuh.ssl.trust-store-type=JKS
